{"version":3,"sources":["img/mask.jpg","components/layout/Header.js","components/page/home.js","components/DrawingBoard.js","components/helpers/runQuery.js","components/ObjectDescription.js","components/page/doodle.js","components/ObjectImage.js","components/page/done.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","id","to","home","href","require","alt","Component","DrawingBoard","props","changeColor","color","setState","actionButton","action","cfd","undo","redo","configBucketTool","state","tolerance","isActive","toggleBucketTool","document","getElementById","classList","add","remove","clear","this","CanvasFreeDrawing","elementId","width","height","setLineWidth","setDrawingColor","onClick","runQuery","url","query","a","request","fetch","encodeURIComponent","respons","json","handleRespons","ObjectDescription","value","then","result","results","bindings","console","log","map","item","index","key","title","doodle","className","ObjectImage","src","img","done","App","basename","exact","path","component","Home","Doodle","Done","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c29cd9d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mask.f293bfbc.jpg\";","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nfunction Header() {\n    return (\n        <header>\n            <div id=\"header-logo\">NMVW</div>\n            <nav>\n                <Link  to='/'> Home </Link>\n                <Link to='/doodle'> Doodle </Link>\n            </nav>\n        </header>\n    )\n}\n\n\nexport default Header;","import React, { Component } from 'react'\n\n\nclass home extends Component {\n    render() {\n        return (\n            <div>\n                <div id=\"uitgelicht\">\n                    <h2>Uitgelicht</h2>\n                    <img href={require('../../img/mask.jpg')} alt=\"A beautifull Mask\" />\n                    <p>\n                        Masker <br />\n                        Tara (10)\n                    </p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default home;","/* eslint-disable default-case */\nimport React, { Component } from 'react'\nimport CanvasFreeDrawing from 'canvas-free-drawing';\n\nclass DrawingBoard extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            color: []\n        }\n\n    }\n\n\n    componentDidMount(){\n        this.cfd = new CanvasFreeDrawing({\n            elementId: 'cfd',\n            width: 500,\n            height: 500,\n          });\n          this.cfd.setLineWidth(10); // in px\n\n    }\n\n    componentDidUpdate(){\n\n        this.cfd.setDrawingColor(this.state.color); // in RGB\n\n    }\n\n    changeColor = (color) => {\n        switch(color){\n            case \"white\":\n                this.setState({color: [255, 255, 255]});\n                break;\n            case \"black\":\n                this.setState({color: [0, 0, 0]});\n                break;\n            case \"gray\":\n                this.setState({color: [100, 100, 100]});\n                break;\n            case \"red\":\n                this.setState({color: [255, 0, 0]});\n                break;\n            case \"blue\":\n                this.setState({color: [0, 0, 255]});\n                break;\n            case \"purple\":\n                this.setState({color: [255, 0, 255]});\n                break;\n            case \"green\":\n                this.setState({color: [0, 255, 0]});\n                break;\n            case \"brown\":\n                this.setState({color: [139, 69, 19]});\n                break;\n            case \"orange\":\n                this.setState({color: [255, 140, 100]});\n                break;\n            case \"yellow\":\n                this.setState({color: [255, 255, 0]});\n                break;\n        }\n    }\n\n    actionButton = (action) => {\n\n        switch(action){\n            case \"undo\":\n                this.cfd.undo();\n                break;\n            case \"redo\":\n                this.cfd.redo();\n                break;\n            case \"bucket\":\n                    this.cfd.configBucketTool({\n                        color: this.state.color,\n                        tolerance: 50\n                    });\n            const isActive = this.cfd.toggleBucketTool();\n            document.getElementById('bucket').classList.add('active');\n            if (isActive) {\n            } else {\n              document.getElementById('bucket').classList.remove('active');\n            }\n            break;\n            case \"clear\":\n                this.cfd.clear();\n                break;\n        }\n\n    }\n\n\n    render() {\n\n        return (\n            <div id='drawingboard'>\n                <h2>Het tekenbord</h2>\n                <canvas id=\"cfd\"></canvas>\n                <div id=\"workbench\">\n                    <button id=\"eraser\" onClick={() => this.changeColor('white')}>Gum</button>\n                    <button id=\"black\" onClick={() => this.changeColor('black')}></button>\n                    <button id =\"gray\" onClick={() => this.changeColor('gray')}></button>\n                    <button id=\"red\" onClick={() => this.changeColor('red')}></button>\n                    <button id=\"blue\" onClick={() => this.changeColor('blue')}></button>\n                    <button id=\"purple\" onClick={() => this.changeColor('purple')}></button>\n                    <button id=\"green\" onClick={() => this.changeColor('green')}></button>\n                    <button id=\"brown\" onClick={() => this.changeColor('brown')}></button>\n                    <button id=\"orange\" onClick={() => this.changeColor('orange')}></button>\n                    <button id=\"yellow\" onClick={() => this.changeColor('yellow')}></button> \n                    <button id=\"bucket\" onClick={() => this.actionButton('bucket')}>Emmer</button> \n                    <button id=\"restart\" onClick={() => this.actionButton('clear')}>Begin opnieuw</button> \n                    <button id=\"undo\" onClick={() => this.actionButton('undo')}>Stapje terug</button> \n                    <button id=\"redo\" onClick={() => this.actionButton('redo')}>Stapje vooruit</button> \n                </div>\n\n            </div>\n        )\n    }\n}\n\n\n\nexport default DrawingBoard;","// This function retrieves the data from the end point\nexport async function runQuery(url, query){\n    let request =  fetch(url+\"?query=\"+ encodeURIComponent(query) +\"&format=json\");\n\n    let respons = await request;\n    let handleRespons = await respons.json();\n    \n    return handleRespons;\n}","import React, { Component } from 'react'\nimport {runQuery } from './helpers/runQuery';\n\n\nclass ObjectDescription extends Component {\n\n    state = {\n        value: []\n      }  \n\n    componentDidMount(){\n        const url =\"https://api.data.netwerkdigitaalerfgoed.nl/datasets/ivo/NMVW/services/NMVW-39/sparql\"\n        const query = `\n        PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n        PREFIX dc: <http://purl.org/dc/elements/1.1/>\n        PREFIX dct: <http://purl.org/dc/terms/>\n        PREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n        PREFIX edm: <http://www.europeana.eu/schemas/edm/>\n        PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n\n        SELECT ?cho ?title ?typeLabel ?img WHERE {\n\n        <https://hdl.handle.net/20.500.11840/termmaster1397> skos:narrower* ?type .\n        ?type skos:prefLabel ?typeLabel .\n\n        ?cho edm:object ?type .\n        ?cho dc:title ?title .\n        ?cho edm:isShownBy ?img.\n        FILTER langMatches(lang(?title), \"ned\")\n        } LIMIT 1\n        `;\n        runQuery(url, query)\n        .then(json => {\n        \n        const result = json.results.bindings;\n            console.log(result);\n            this.setState({\n                value: result\n            });\n        });\n    }\n\n    render(){\n        return (\n            <div> \n                {this.state.value.map((item, index)=>(\n                    <p key={index}>{item.title.value}</p>\n                ))}\n            </div>\n        )\n    }\n}\n\nexport default ObjectDescription;","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport DrawingBoard from '../DrawingBoard';\nimport ObjectDescription from '../ObjectDescription';\n\nclass doodle extends Component {\n    render() {\n        return (\n            <div className=\"col2\">\n                <DrawingBoard/>\n                <div>\n                    <h2>Omschrijving</h2>\n                    <ObjectDescription />\n                    <div className=\"button\">Ander Omschrijving</div>\n                    <div className=\"button\"><Link to='/done'>Klaar!</Link></div>\n                </div> \n            </div>\n        )\n    }\n}\n\nexport default doodle;","import React, { Component } from 'react'\nimport {runQuery } from './helpers/runQuery';\n\n\nclass ObjectImage extends Component {\n\n    state = {\n        value: []\n      }  \n\n    componentDidMount(){\n        const url =\"https://api.data.netwerkdigitaalerfgoed.nl/datasets/ivo/NMVW/services/NMVW-39/sparql\"\n        const query = `\n        PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\n        PREFIX dc: <http://purl.org/dc/elements/1.1/>\n        PREFIX dct: <http://purl.org/dc/terms/>\n        PREFIX skos: <http://www.w3.org/2004/02/skos/core#>\n        PREFIX edm: <http://www.europeana.eu/schemas/edm/>\n        PREFIX foaf: <http://xmlns.com/foaf/0.1/>\n\n        SELECT ?cho ?title ?typeLabel ?img WHERE {\n\n        <https://hdl.handle.net/20.500.11840/termmaster1397> skos:narrower* ?type .\n        ?type skos:prefLabel ?typeLabel .\n\n        ?cho edm:object ?type .\n        ?cho dc:title ?title .\n        ?cho edm:isShownBy ?img.\n        FILTER langMatches(lang(?title), \"ned\")\n        } LIMIT 1\n        `;\n        runQuery(url, query)\n        .then(json => {\n        \n        const result = json.results.bindings;\n            console.log(result);\n            this.setState({\n                value: result\n            });\n        });\n    }\n\n    render(){\n        return (\n            <div> \n                <ul>\n                {this.state.value.map((item, index)=>(\n                     <img key={index + 1} alt='Hungry students prevented this from being loaded' src={item.img.value}/> \n                ))}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default ObjectImage;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ObjectImage from '../ObjectImage';\nimport ObjectDescription from '../ObjectDescription';\n\n\n\nclass done extends Component {\n    render() {\n        return (\n            <div>\n                <h2>Zo zag het eruit!</h2>\n                <div className=\"col2\">\n                    <ObjectImage/>\n                    <ObjectDescription/>\n                </div>\n                <div className=\"center\">\n                    <Link to='/doodle'><div className=\"button\">Maak een nieuwe</div></Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default done;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Home from './components/page/home';\nimport Doodle from './components/page/doodle';\nimport Done from './components/page/done';\nimport './static/App.css';\n\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.url = 'https://ramon96.github.io/frontend-applications/';\n  }\n\n  render(){\n\n    return (\n      <div className='App'>\n      <Router basename={this.url}>\n        <Header />\n        <Route exact path='/' component = { Home }></Route>\n        <Route path='/doodle' component={ Doodle }></Route>\n        <Route path='/done' component={ Done }></Route>\n      </Router>\n      </div>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}