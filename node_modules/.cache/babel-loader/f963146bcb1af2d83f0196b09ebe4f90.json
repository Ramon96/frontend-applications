{"ast":null,"code":"var _jsxFileName = \"/Users/ramonmeijers/Documents/School/Leerjaar 3/techtrack/frontend-applications/frontend-application/src/App.js\";\nimport React from 'react';\nimport './App.css';\nconst el = document.querySelector('p');\nconst url = \"https://api.data.netwerkdigitaalerfgoed.nl/datasets/hackalod/GVN/services/GVN/sparql\"; //Note that the query is wrapped in es6 template strings to allow for easy copy pasting\n\nconst query = \"\\nPREFIX dct: <http://purl.org/dc/terms/>\\nSELECT * WHERE {\\n  ?sub dct:created \\\"1893\\\" .\\n} LIMIT 1000\\n\";\nrunQuery(url, query);\n\nfunction runQuery(url, query) {\n  //Test if the endpoint is up and print result to page \n  // (you can improve this script by making the next part of this function wait for a succesful result)\n  fetch(url).then(res => el.innerText = \"Status of API: \" + res.status); // Call the url with the query attached, output data\n\n  fetch(url + \"?query=\" + encodeURIComponent(query) + \"&format=json\").then(res => res.json()).then(json => {\n    console.log(json);\n    console.table(json.results);\n    el.textContent = JSON.stringify(json.results);\n  });\n}\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ramonmeijers/Documents/School/Leerjaar 3/techtrack/frontend-applications/frontend-application/src/App.js"],"names":["React","el","document","querySelector","url","query","runQuery","fetch","then","res","innerText","status","encodeURIComponent","json","console","log","table","results","textContent","JSON","stringify","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,MAAMC,EAAE,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAX;AACA,MAAMC,GAAG,GAAE,sFAAX,C,CACA;;AACA,MAAMC,KAAK,+GAAX;AAMAC,QAAQ,CAACF,GAAD,EAAMC,KAAN,CAAR;;AAEA,SAASC,QAAT,CAAkBF,GAAlB,EAAuBC,KAAvB,EAA6B;AAC3B;AACA;AACAE,EAAAA,KAAK,CAACH,GAAD,CAAL,CACGI,IADH,CACQC,GAAG,IAAIR,EAAE,CAACS,SAAH,GAAe,oBAAoBD,GAAG,CAACE,MADtD,EAH2B,CAK3B;;AACAJ,EAAAA,KAAK,CAACH,GAAG,GAAC,SAAJ,GAAeQ,kBAAkB,CAACP,KAAD,CAAjC,GAA0C,cAA3C,CAAL,CACCG,IADD,CACMC,GAAG,IAAIA,GAAG,CAACI,IAAJ,EADb,EAECL,IAFD,CAEMK,IAAI,IAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,IAAAA,OAAO,CAACE,KAAR,CAAcH,IAAI,CAACI,OAAnB;AACAhB,IAAAA,EAAE,CAACiB,WAAH,GAAiBC,IAAI,CAACC,SAAL,CAAeP,IAAI,CAACI,OAApB,CAAjB;AACC,GAND;AAOD;;AAED,SAASI,GAAT,GAAe;AAIb,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD;;AAED,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst el = document.querySelector('p')\nconst url =\"https://api.data.netwerkdigitaalerfgoed.nl/datasets/hackalod/GVN/services/GVN/sparql\"\n//Note that the query is wrapped in es6 template strings to allow for easy copy pasting\nconst query = `\nPREFIX dct: <http://purl.org/dc/terms/>\nSELECT * WHERE {\n  ?sub dct:created \"1893\" .\n} LIMIT 1000\n`\nrunQuery(url, query)\n\nfunction runQuery(url, query){\n  //Test if the endpoint is up and print result to page \n  // (you can improve this script by making the next part of this function wait for a succesful result)\n  fetch(url)\n    .then(res => el.innerText = \"Status of API: \" + res.status)\n  // Call the url with the query attached, output data\n  fetch(url+\"?query=\"+ encodeURIComponent(query) +\"&format=json\")\n  .then(res => res.json())\n  .then(json => {\n  console.log(json)\n  console.table(json.results);\n  el.textContent = JSON.stringify(json.results)\n  })\n}\n\nfunction App() {\n\n\n  \n  return (\n    <div className=\"App\">\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}