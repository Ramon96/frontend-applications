{"ast":null,"code":"var _jsxFileName = \"/Users/ramonmeijers/Documents/School/Leerjaar 3/techtrack/frontend-applications/frontend-application/src/components/DrawingBoard.js\";\nimport React, { Component } from 'react';\nimport CanvasFreeDrawing from 'canvas-free-drawing';\n\nclass DrawingBoard extends Component {\n  componentDidMount() {\n    const cfd = new CanvasFreeDrawing({\n      elementId: 'cfd',\n      width: 500,\n      height: 500\n    });\n    let i = 0; // set properties\n\n    cfd.setLineWidth(10); // in px\n\n    cfd.setStrokeColor([i, i, i]); // in RGB\n    // listen to events\n\n    cfd.on({\n      event: 'redraw'\n    }, () => {\n      // code...\n      if (i < 255) {\n        i++;\n      }\n\n      cfd.setStrokeColor([0, i, 255]); // in RGB\n\n      console.log(i);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"cfd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default DrawingBoard;","map":{"version":3,"sources":["/Users/ramonmeijers/Documents/School/Leerjaar 3/techtrack/frontend-applications/frontend-application/src/components/DrawingBoard.js"],"names":["React","Component","CanvasFreeDrawing","DrawingBoard","componentDidMount","cfd","elementId","width","height","i","setLineWidth","setStrokeColor","on","event","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAEjCG,EAAAA,iBAAiB,GAAE;AACf,UAAMC,GAAG,GAAG,IAAIH,iBAAJ,CAAsB;AAC9BI,MAAAA,SAAS,EAAE,KADmB;AAE9BC,MAAAA,KAAK,EAAE,GAFuB;AAG9BC,MAAAA,MAAM,EAAE;AAHsB,KAAtB,CAAZ;AAKA,QAAIC,CAAC,GAAG,CAAR,CANe,CAOb;;AACFJ,IAAAA,GAAG,CAACK,YAAJ,CAAiB,EAAjB,EARe,CAQO;;AACtBL,IAAAA,GAAG,CAACM,cAAJ,CAAmB,CAACF,CAAD,EAAIA,CAAJ,EAAOA,CAAP,CAAnB,EATe,CASgB;AAE/B;;AACAJ,IAAAA,GAAG,CAACO,EAAJ,CAAO;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAP,EAA4B,MAAM;AAC9B;AACA,UAAIJ,CAAC,GAAG,GAAR,EAAY;AACRA,QAAAA,CAAC;AACJ;;AACLJ,MAAAA,GAAG,CAACM,cAAJ,CAAmB,CAAC,CAAD,EAAIF,CAAJ,EAAO,GAAP,CAAnB,EALkC,CAKD;;AAE7BK,MAAAA,OAAO,CAACC,GAAR,CAAYN,CAAZ;AACH,KARD;AAUH;;AAGDO,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,EAAE,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAjCgC;;AAsCrC,eAAeb,YAAf","sourcesContent":["import React, { Component } from 'react'\nimport CanvasFreeDrawing from 'canvas-free-drawing';\n\nclass DrawingBoard extends Component {\n\n    componentDidMount(){\n        const cfd = new CanvasFreeDrawing({\n            elementId: 'cfd',\n            width: 500,\n            height: 500,\n        });\n        let i = 0;\n          // set properties\n        cfd.setLineWidth(10); // in px\n        cfd.setStrokeColor([i, i, i]); // in RGB\n        \n        // listen to events\n        cfd.on({ event: 'redraw' }, () => {\n            // code...\n            if (i < 255){\n                i++;\n            }\n        cfd.setStrokeColor([0, i, 255]); // in RGB\n\n            console.log(i);\n        });\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <canvas id=\"cfd\"></canvas>\n            </div>\n        )\n    }\n}\n\n\n\nexport default DrawingBoard;"]},"metadata":{},"sourceType":"module"}