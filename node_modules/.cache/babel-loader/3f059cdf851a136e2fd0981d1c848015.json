{"ast":null,"code":"var _jsxFileName = \"/Users/ramonmeijers/Documents/School/Leerjaar 3/techtrack/frontend-applications/frontend-application/src/components/DrawingBoard.js\";\nimport React, { Component } from 'react';\nimport CanvasFreeDrawing from 'canvas-free-drawing';\n\nclass DrawingBoard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeColor = color => {\n      console.log('hallo' + color);\n      this.state.cfd.setStrokeColor([100, 100, 100]); // switch(color){\n      //     case 'white':\n      //         cfd.setStrokeColor( this.state.color ); \n      //         break;\n      // }\n    };\n\n    this.state = {\n      // color: [255,0,0]\n      cfd: null\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      cfd: new CanvasFreeDrawing({\n        elementId: 'cfd',\n        width: 500,\n        height: 500\n      })\n    }); // const cfd = new CanvasFreeDrawing({\n    //     elementId: 'cfd',\n    //     width: 500,\n    //     height: 500,\n    // });\n    // set properties\n\n    this.state.cfd.setLineWidth(10); // in px\n    // cfd.setStrokeColor( [0,0,0] ); // in RGB\n\n    this.state.cfd.setStrokeColor([255, 0, 0]); // in RGB\n    // listen to events\n    // cfd.on({ event: 'redraw' }, () => {\n    //     // code...\n    //     // if (i < 255){\n    //     //     i++;\n    //     // }\n    // // cfd.setStrokeColor([i, i, i]); // in RGB\n    //     // console.log(i);\n    // });\n\n    console.log(this.state.color);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"cfd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.changeColor('white'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Gum\"), React.createElement(\"button\", {\n      onClick: () => this.changeColor('black'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Zwart\"), React.createElement(\"button\", {\n      onClick: () => this.changeColor('gray'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Grijs\"), React.createElement(\"button\", {\n      onClick: () => this.changeColor('red'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Rood\"), React.createElement(\"button\", {\n      onClick: () => this.changeColor('blue'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Blauw\"), React.createElement(\"button\", {\n      onClick: () => this.changeColor('purple'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Paars\"), React.createElement(\"button\", {\n      onClick: () => this.changeColor('green'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Groen\"), React.createElement(\"button\", {\n      onClick: () => this.changeColor('brown'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Bruin\"), React.createElement(\"button\", {\n      onClick: () => this.changeColor('orange'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Oranje\"), React.createElement(\"button\", {\n      onClick: () => this.changeColor('yellow'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Geel\"));\n  }\n\n}\n\nexport default DrawingBoard;","map":{"version":3,"sources":["/Users/ramonmeijers/Documents/School/Leerjaar 3/techtrack/frontend-applications/frontend-application/src/components/DrawingBoard.js"],"names":["React","Component","CanvasFreeDrawing","DrawingBoard","constructor","props","changeColor","color","console","log","state","cfd","setStrokeColor","componentDidMount","setState","elementId","width","height","setLineWidth","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport CanvasFreeDrawing from 'canvas-free-drawing';\n\nclass DrawingBoard extends Component {\n    constructor(props){\n        super(props);\n\n\n\n        this.state =\n        {\n           // color: [255,0,0]\n\n           cfd: null\n        }\n    }\n\n\n    componentDidMount(){\n        this.setState({\n            cfd: new CanvasFreeDrawing({\n                elementId: 'cfd',\n                width: 500,\n                height: 500,\n            })\n        })\n        // const cfd = new CanvasFreeDrawing({\n        //     elementId: 'cfd',\n        //     width: 500,\n        //     height: 500,\n        // });\n          // set properties\n        this.state.cfd.setLineWidth(10); // in px\n        // cfd.setStrokeColor( [0,0,0] ); // in RGB\n        this.state.cfd.setStrokeColor([255,0,0] ); // in RGB\n        \n        // listen to events\n        // cfd.on({ event: 'redraw' }, () => {\n        //     // code...\n        //     // if (i < 255){\n        //     //     i++;\n        //     // }\n        // // cfd.setStrokeColor([i, i, i]); // in RGB\n\n        //     // console.log(i);\n        // });\n\n        console.log(this.state.color);\n\n    }\n\n    changeColor = (color) => {\n        console.log('hallo' + color);\n        this.state.cfd.setStrokeColor([100,100,100]);\n        // switch(color){\n        //     case 'white':\n        //         cfd.setStrokeColor( this.state.color ); \n        //         break;\n        // }\n    }\n\n\n    render() {\n        return (\n            <div>\n                <canvas id=\"cfd\"></canvas>\n                <button onClick={() => this.changeColor('white')}>Gum</button>\n                <button onClick={() => this.changeColor('black')}>Zwart</button>\n                <button onClick={() => this.changeColor('gray')}>Grijs</button>\n                <button onClick={() => this.changeColor('red')}>Rood</button>\n                <button onClick={() => this.changeColor('blue')}>Blauw</button>\n                <button onClick={() => this.changeColor('purple')}>Paars</button>\n                <button onClick={() => this.changeColor('green')}>Groen</button>\n                <button onClick={() => this.changeColor('brown')}>Bruin</button>\n                <button onClick={() => this.changeColor('orange')}>Oranje</button>\n                <button onClick={() => this.changeColor('yellow')}>Geel</button>\n            </div>\n        )\n    }\n}\n\n\n\nexport default DrawingBoard;"]},"metadata":{},"sourceType":"module"}