{"ast":null,"code":"var _jsxFileName = \"/Users/ramonmeijers/Documents/School/Leerjaar 3/techtrack/frontend-applications/frontend-application/src/components/DrawingBoard.js\";\nimport React, { Component } from 'react';\nimport CanvasFreeDrawing from 'canvas-free-drawing';\n\nclass DrawingBoard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeColor = color => {\n      console.log('halloo' + color);\n    };\n\n    this.state = {\n      color: [255, 0, 0]\n    };\n  }\n\n  componentDidMount() {\n    const cfd = new CanvasFreeDrawing({\n      elementId: 'cfd',\n      width: 500,\n      height: 500\n    }); // set properties\n\n    cfd.setLineWidth(10); // in px\n    // cfd.setStrokeColor( [0,0,0] ); // in RGB\n\n    cfd.setStrokeColor(this.state.color); // in RGB\n    // listen to events\n    // cfd.on({ event: 'redraw' }, () => {\n    //     // code...\n    //     // if (i < 255){\n    //     //     i++;\n    //     // }\n    // // cfd.setStrokeColor([i, i, i]); // in RGB\n    //     // console.log(i);\n    // });\n\n    console.log(this.state.color);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"cfd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.changeColor('blue'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"blue\"));\n  }\n\n}\n\nexport default DrawingBoard;","map":{"version":3,"sources":["/Users/ramonmeijers/Documents/School/Leerjaar 3/techtrack/frontend-applications/frontend-application/src/components/DrawingBoard.js"],"names":["React","Component","CanvasFreeDrawing","DrawingBoard","constructor","props","changeColor","color","console","log","state","componentDidMount","cfd","elementId","width","height","setLineWidth","setStrokeColor","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AACjCG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAoClBC,WApCkB,GAoCHC,KAAD,IAAW;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAWF,KAAvB;AACH,KAtCiB;;AAGd,SAAKG,KAAL,GACA;AACIH,MAAAA,KAAK,EAAE,CAAC,GAAD,EAAK,CAAL,EAAO,CAAP;AADX,KADA;AAIH;;AAGDI,EAAAA,iBAAiB,GAAE;AACf,UAAMC,GAAG,GAAG,IAAIV,iBAAJ,CAAsB;AAC9BW,MAAAA,SAAS,EAAE,KADmB;AAE9BC,MAAAA,KAAK,EAAE,GAFuB;AAG9BC,MAAAA,MAAM,EAAE;AAHsB,KAAtB,CAAZ,CADe,CAMb;;AACFH,IAAAA,GAAG,CAACI,YAAJ,CAAiB,EAAjB,EAPe,CAOO;AACtB;;AACAJ,IAAAA,GAAG,CAACK,cAAJ,CAAoB,KAAKP,KAAL,CAAWH,KAA/B,EATe,CASyB;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWH,KAAvB;AAEH;;AAODW,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,EAAE,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAQ,MAAA,OAAO,EAAE,KAAKZ,WAAL,CAAiB,MAAjB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CADJ;AAMH;;AAjDgC;;AAsDrC,eAAeH,YAAf","sourcesContent":["import React, { Component } from 'react'\nimport CanvasFreeDrawing from 'canvas-free-drawing';\n\nclass DrawingBoard extends Component {\n    constructor(props){\n        super(props);\n\n        this.state =\n        {\n            color: [255,0,0]\n        }\n    }\n\n\n    componentDidMount(){\n        const cfd = new CanvasFreeDrawing({\n            elementId: 'cfd',\n            width: 500,\n            height: 500,\n        });\n          // set properties\n        cfd.setLineWidth(10); // in px\n        // cfd.setStrokeColor( [0,0,0] ); // in RGB\n        cfd.setStrokeColor( this.state.color ); // in RGB\n        \n        // listen to events\n        // cfd.on({ event: 'redraw' }, () => {\n        //     // code...\n        //     // if (i < 255){\n        //     //     i++;\n        //     // }\n        // // cfd.setStrokeColor([i, i, i]); // in RGB\n\n        //     // console.log(i);\n        // });\n\n        console.log(this.state.color);\n\n    }\n\n    changeColor = (color) => {\n        console.log('halloo' + color);\n    }\n\n\n    render() {\n        return (\n            <div>\n                <canvas id=\"cfd\"></canvas>\n                <button onClick={this.changeColor('blue')}>blue</button>\n            </div>\n        )\n    }\n}\n\n\n\nexport default DrawingBoard;"]},"metadata":{},"sourceType":"module"}