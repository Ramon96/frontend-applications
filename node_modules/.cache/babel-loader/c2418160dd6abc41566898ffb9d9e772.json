{"ast":null,"code":"var _jsxFileName = \"/Users/ramonmeijers/Documents/School/Leerjaar 3/techtrack/frontend-applications/frontend-application/src/App.js\";\nimport React from 'react';\nimport './App.css'; // const el = document.querySelector('p')\n\nconst url = \"https://api.data.netwerkdigitaalerfgoed.nl/datasets/ivo/NMVW/services/NMVW-39/sparql\"; //Note that the query is wrapped in es6 template strings to allow for easy copy pasting\n\nconst query = \"\\n#+ summary: Get photos through edm:object\\n\\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\\nPREFIX dct: <http://purl.org/dc/terms/>\\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\\nPREFIX edm: <http://www.europeana.eu/schemas/edm/>\\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\\n\\nSELECT ?cho ?title ?typeLabel WHERE {\\n\\n  <https://hdl.handle.net/20.500.11840/termmaster1397> skos:narrower* ?type .\\n  ?type skos:prefLabel ?typeLabel .\\n\\n  ?cho edm:object ?type .\\n  ?cho dc:title ?title .\\n  FILTER langMatches(lang(?title), \\\"ned\\\")\\n} LIMIT 10\\n\\n\";\nrunQuery(url, query);\n\nfunction runQuery(url, query) {\n  //Test if the endpoint is up and print result to page \n  // (you can improve this script by making the next part of this function wait for a succesful result)\n  fetch(url); // .then(res => el.innerText = \"Status of API: \" + res.status)\n  // Call the url with the query attached, output data\n\n  fetch(url + \"?query=\" + encodeURIComponent(query) + \"&format=json\").then(res => res.json()).then(json => {\n    console.log(json);\n    console.table(json.results); // el.textContent = JSON.stringify(json.results)\n  });\n}\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ramonmeijers/Documents/School/Leerjaar 3/techtrack/frontend-applications/frontend-application/src/App.js"],"names":["React","url","query","runQuery","fetch","encodeURIComponent","then","res","json","console","log","table","results","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP,C,CAEA;;AACA,MAAMC,GAAG,GAAE,sFAAX,C,CACA;;AACA,MAAMC,KAAK,4mBAAX;AAqBAC,QAAQ,CAACF,GAAD,EAAMC,KAAN,CAAR;;AAEA,SAASC,QAAT,CAAkBF,GAAlB,EAAuBC,KAAvB,EAA6B;AAC3B;AACA;AACAE,EAAAA,KAAK,CAACH,GAAD,CAAL,CAH2B,CAIzB;AACF;;AACAG,EAAAA,KAAK,CAACH,GAAG,GAAC,SAAJ,GAAeI,kBAAkB,CAACH,KAAD,CAAjC,GAA0C,cAA3C,CAAL,CACCI,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEME,IAAI,IAAI;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,IAAAA,OAAO,CAACE,KAAR,CAAcH,IAAI,CAACI,OAAnB,EAFc,CAGd;AACC,GAND;AAOD;;AAED,SAASC,GAAT,GAAe;AAIb,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD;;AAED,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\n// const el = document.querySelector('p')\nconst url =\"https://api.data.netwerkdigitaalerfgoed.nl/datasets/ivo/NMVW/services/NMVW-39/sparql\"\n//Note that the query is wrapped in es6 template strings to allow for easy copy pasting\nconst query = `\n#+ summary: Get photos through edm:object\n\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX dct: <http://purl.org/dc/terms/>\nPREFIX skos: <http://www.w3.org/2004/02/skos/core#>\nPREFIX edm: <http://www.europeana.eu/schemas/edm/>\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\n\nSELECT ?cho ?title ?typeLabel WHERE {\n\n  <https://hdl.handle.net/20.500.11840/termmaster1397> skos:narrower* ?type .\n  ?type skos:prefLabel ?typeLabel .\n\n  ?cho edm:object ?type .\n  ?cho dc:title ?title .\n  FILTER langMatches(lang(?title), \"ned\")\n} LIMIT 10\n\n`\nrunQuery(url, query)\n\nfunction runQuery(url, query){\n  //Test if the endpoint is up and print result to page \n  // (you can improve this script by making the next part of this function wait for a succesful result)\n  fetch(url)\n    // .then(res => el.innerText = \"Status of API: \" + res.status)\n  // Call the url with the query attached, output data\n  fetch(url+\"?query=\"+ encodeURIComponent(query) +\"&format=json\")\n  .then(res => res.json())\n  .then(json => {\n  console.log(json)\n  console.table(json.results);\n  // el.textContent = JSON.stringify(json.results)\n  })\n}\n\nfunction App() {\n\n\n  \n  return (\n    <div className=\"App\">\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}