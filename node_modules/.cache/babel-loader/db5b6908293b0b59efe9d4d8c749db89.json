{"ast":null,"code":"// import React, { Component } from 'react'\n// import CanvasFreeDrawing from 'canvas-free-drawing';\n// class DrawingBoard extends Component {\n//     constructor(props){\n//         super(props);\n//         const cfd = new CanvasFreeDrawing({\n//             elementId: 'cfd',\n//             width: 500,\n//             height: 500,\n//         });\n//         this.state =\n//         {\n//            // color: [255,0,0]\n//            cfd: null\n//         }\n//     }\n//     componentDidMount(){\n//         // this.setState({\n//         //     cfd: new CanvasFreeDrawing({\n//         //         elementId: 'cfd',\n//         //         width: 500,\n//         //         height: 500,\n//         //     })\n//         // })\n//           // set properties\n//         this.cfd.setLineWidth(10); // in px\n//         // cfd.setStrokeColor( [0,0,0] ); // in RGB\n//         this.cfd.setStrokeColor([255,0,0] ); // in RGB\n//         // listen to events\n//         // cfd.on({ event: 'redraw' }, () => {\n//         //     // code...\n//         //     // if (i < 255){\n//         //     //     i++;\n//         //     // }\n//         // // cfd.setStrokeColor([i, i, i]); // in RGB\n//         //     // console.log(i);\n//         // });\n//         console.log(this.state.color);\n//     }\n//     changeColor = (color) => {\n//         console.log('hallo' + color);\n//         this.cfd.setStrokeColor([100,100,100]);\n//         // switch(color){\n//         //     case 'white':\n//         //         cfd.setStrokeColor( this.state.color ); \n//         //         break;\n//         // }\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <canvas id=\"cfd\"></canvas>\n//                 <button onClick={() => this.changeColor('white')}>Gum</button>\n//                 <button onClick={() => this.changeColor('black')}>Zwart</button>\n//                 <button onClick={() => this.changeColor('gray')}>Grijs</button>\n//                 <button onClick={() => this.changeColor('red')}>Rood</button>\n//                 <button onClick={() => this.changeColor('blue')}>Blauw</button>\n//                 <button onClick={() => this.changeColor('purple')}>Paars</button>\n//                 <button onClick={() => this.changeColor('green')}>Groen</button>\n//                 <button onClick={() => this.changeColor('brown')}>Bruin</button>\n//                 <button onClick={() => this.changeColor('orange')}>Oranje</button>\n//                 <button onClick={() => this.changeColor('yellow')}>Geel</button>\n//             </div>\n//         )\n//     }\n// }\n// export default DrawingBoard;","map":{"version":3,"sources":["/Users/ramonmeijers/Documents/School/Leerjaar 3/techtrack/frontend-applications/frontend-application/src/components/DrawingBoard.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA","sourcesContent":["// import React, { Component } from 'react'\n// import CanvasFreeDrawing from 'canvas-free-drawing';\n\n// class DrawingBoard extends Component {\n//     constructor(props){\n//         super(props);\n\n//         const cfd = new CanvasFreeDrawing({\n//             elementId: 'cfd',\n//             width: 500,\n//             height: 500,\n//         });\n\n\n\n//         this.state =\n//         {\n//            // color: [255,0,0]\n\n//            cfd: null\n//         }\n//     }\n\n\n//     componentDidMount(){\n//         // this.setState({\n//         //     cfd: new CanvasFreeDrawing({\n//         //         elementId: 'cfd',\n//         //         width: 500,\n//         //         height: 500,\n//         //     })\n//         // })\n      \n//           // set properties\n//         this.cfd.setLineWidth(10); // in px\n//         // cfd.setStrokeColor( [0,0,0] ); // in RGB\n//         this.cfd.setStrokeColor([255,0,0] ); // in RGB\n        \n//         // listen to events\n//         // cfd.on({ event: 'redraw' }, () => {\n//         //     // code...\n//         //     // if (i < 255){\n//         //     //     i++;\n//         //     // }\n//         // // cfd.setStrokeColor([i, i, i]); // in RGB\n\n//         //     // console.log(i);\n//         // });\n\n//         console.log(this.state.color);\n\n//     }\n\n//     changeColor = (color) => {\n//         console.log('hallo' + color);\n//         this.cfd.setStrokeColor([100,100,100]);\n//         // switch(color){\n//         //     case 'white':\n//         //         cfd.setStrokeColor( this.state.color ); \n//         //         break;\n//         // }\n//     }\n\n\n//     render() {\n//         return (\n//             <div>\n//                 <canvas id=\"cfd\"></canvas>\n//                 <button onClick={() => this.changeColor('white')}>Gum</button>\n//                 <button onClick={() => this.changeColor('black')}>Zwart</button>\n//                 <button onClick={() => this.changeColor('gray')}>Grijs</button>\n//                 <button onClick={() => this.changeColor('red')}>Rood</button>\n//                 <button onClick={() => this.changeColor('blue')}>Blauw</button>\n//                 <button onClick={() => this.changeColor('purple')}>Paars</button>\n//                 <button onClick={() => this.changeColor('green')}>Groen</button>\n//                 <button onClick={() => this.changeColor('brown')}>Bruin</button>\n//                 <button onClick={() => this.changeColor('orange')}>Oranje</button>\n//                 <button onClick={() => this.changeColor('yellow')}>Geel</button>\n//             </div>\n//         )\n//     }\n// }\n\n\n\n// export default DrawingBoard;"]},"metadata":{},"sourceType":"module"}